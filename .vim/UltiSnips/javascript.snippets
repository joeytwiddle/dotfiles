
snippet func "named function (fun)" !
function ${1:function_name}(${2}) {
	${VISUAL}$0
}
endsnippet

snippet fn "anonymous function (fn)" w
function (${1}) {
	${VISUAL}$0
}
endsnippet

snippet for "for (...) {...}" !
for (var ${1:i} = 0; $1 < ${2:array}.length; $1++) {
	var ${3:item} = $2[$1];
	$0
}
endsnippet

snippet forr "for (...) {...} [reverse]"
for (var ${1:i} = ${2:array}.length; $1--;) {
	var ${3:item} = $2[$1];
	$0
}
endsnippet

snippet forin "for (... in ...) {...}" !
for (var ${1:x} in ${2:obj}) {
	var ${3:prop} = $2[$1];
	$0
}
endsnippet

snippet .forE ".forEach()" !w
.forEach(function (${1:item}) {
	${0:// body...}
});
endsnippet

snippet .each ".each() [JQuery]" !w
.each(function () {
	var \$${1:item} = \$(this);
	$0
});
endsnippet

snippet .map ".map()" !w
.map(function (${1:item}) {
	return $0$1;
});
endsnippet

snippet ife "if (err)" !
if (${1:err}) return ${2:callback}($1);
$0
endsnippet

snippet try "try-catch" !
try {
	$0
} catch (err) {
	
}
endsnippet

snippet log0 "simple console.log" w
console.log(\`$0\`);
endsnippet

snippet log "console.log an expression" w
console.log("$1:", $1);$0
endsnippet

# When your console does not report filename+line number, you can get them using these macros.  (Useful on Node if you are not using enhance_console_log)

snippet Log "simple console.log with file and line number" w
console.log(`[log] (" + new Error().stack.split('\n')[1].replace(/^ *at /, '').split('/').slice(-2).join('/') + ") $0:`);
endsnippet

snippet Loge "console.log an expression with file and line number" w
console.log("[log] (" + new Error().stack.split('\n')[1].replace(/^ *at /, '').split('/').slice(-2).join('/') + ") $1:", $1);$0
endsnippet

snippet Prom "Promise" w
new Promise((resolve, reject) => {
	$0
});
endsnippet
