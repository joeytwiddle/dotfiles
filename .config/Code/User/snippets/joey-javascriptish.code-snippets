{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"Log expression to console": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "log",
		"body": [
			"console.log(`$1:`, $1);$2",
		],
		"description": "Log expression to console"
	},
	// I found the above snippet was not easy to access, because other `log` suggestions would often get in the way.
	// (We could set `"editor.snippetSuggestions": "top"` but that has its own disadvantages, e.g. appearing before the props of a component I am calling.)
	// So instead let's provide `loge`:
	"Log expression to console (e)": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "loge",
		"body": [
			"console.log(`$1:`, $1);$2",
		],
		"description": "Log expression to console (e)"
	},
	"Log text to console": {
		"prefix": "log0",
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"body": [
			"console.log(`$1`);$2",
		],
		"description": "Log text to console"
	},
}
